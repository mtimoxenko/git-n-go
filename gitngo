#!/bin/bash

# Function to display usage
usage() {
  echo "Usage: gitngo [file_path] [commit message]"
  echo "       file_path: The file or directory to add. If not specified, defaults to all changes ('.')."
  echo "       commit message: The commit message to use. If not specified, a random default message is used."
  exit 1
}

# Check if the user requested help
if [[ "$1" == "--help" ]]; then
  usage
fi

# Check if this is a git repository
if ! git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
    echo "NOT a git repository!"
    exit 1
fi

# Determine file path to add
file_path="."
if [ -n "$1" ]; then
  file_path="$1"
  shift # Remove the file path argument
fi

# Define an array of possible commit messages
commit_messages=(
    "Quick update, no time to explain!"
    "Coding in the fast lane."
    "Rapid commit, keep moving."
    "On-the-go code update."
    "Effortless push, because why not?"
    "Speed coding, speedy commit."
    "No fuss, just progress."
    "From editor to repo, swiftly."
    "Instant commit, just like magic."
    "Seamless code journey, onwards!"
)

# Generate a random index to select a message
random_index=$(($RANDOM % ${#commit_messages[@]}))

# Set the commit message, using a randomly selected default if none is provided
commit_message="${*:-${commit_messages[$random_index]}}"

# Add the specified files or all files if file_path is '.'
echo "Adding $file_path"
git add "$file_path"
if [ $? -ne 0 ]; then
  echo "Error: failed to add files."
  exit 1
fi

# Commit the changes
echo "Committing with message: $commit_message"
git commit -m "$commit_message"
if [ $? -ne 0 ]; then
  echo "Error: commit failed."
  exit 1
fi

# Push the commit to the origin's main branch
echo "Pushing to the origin's main branch"
git push -u origin main
if [ $? -ne 0 ]; then
  echo "Error: push failed."
  exit 1
fi
